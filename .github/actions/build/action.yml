name: Build
description: 'Build action to build and validate the MonoGame Framework'
inputs:
  platform:
    description: 'Platform to run the action on'
    required: true
  shell:
    description: 'Shell to use for the action'
    required: true

runs:
  using: "composite"
  steps:
    - name: Build
      run: dotnet run --project build/Build.csproj -- --target=Default
      shell: ${{ inputs.shell }}

    - name: Run Tests Windows
      if: ${{ inputs.platform == 'windows' }}
      run: |
        echo '-> Running Windows Tests'
        dotnet test Tools/MonoGame.Tools.Tests/MonoGame.Tools.Tests.csproj --blame-hang-timeout 5m -c Release
      shell: ${{ inputs.shell }}
      env:
        CI: true

    - name: Run Tests Linux/Mac
      if: ${{ inputs.platform != 'windows' }}
      run: |
        echo '-> Running Mac/Linux Tests'
        MGFXC_WINE_PATH=/home/runner/.winemonogame dotnet test Tools/MonoGame.Tools.Tests/MonoGame.Tools.Tests.csproj --blame-hang-timeout 5m -c Release --filter="TestCategory!=Audio"
      shell: ${{ inputs.shell }}
      env:
        CI: true

    - name: Expose GitHub Runtime
      uses: crazy-max/ghaction-github-runtime@v3

    - name: Upload Artifacts
      run: dotnet run --project build/Build.csproj -- --target=UploadArtifacts
      shell: ${{ inputs.shell }}
      env:
        ACTIONS_RUNTIME_TOKEN: ${{ env.ACTIONS_RUNTIME_TOKEN }}
        ACTIONS_RUNTIME_URL: "${{ env.ACTIONS_RUNTIME_URL }}"